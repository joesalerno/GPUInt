{"numTotalTestSuites":5,"numPassedTestSuites":2,"numFailedTestSuites":3,"numPendingTestSuites":0,"numTotalTests":10,"numPassedTests":0,"numFailedTests":1,"numPendingTests":9,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1749963500239,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should add \"123\" + \"456\" via WebGL (with actual GPU read attempt)","status":"skipped","title":"should add \"123\" + \"456\" via WebGL (with actual GPU read attempt)","failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should add two larger BigIntPrimitives requiring multiple limbs using WebGL (e.g., \"8000\" + \"7000\" = \"15000\")","status":"skipped","title":"should add two larger BigIntPrimitives requiring multiple limbs using WebGL (e.g., \"8000\" + \"7000\" = \"15000\")","failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should handle adding zero to a number using WebGL","status":"skipped","title":"should handle adding zero to a number using WebGL","failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should subtract two positive single-limb numbers, no borrow (e.g., \"567\" - \"123\" = \"444\")","status":"skipped","title":"should subtract two positive single-limb numbers, no borrow (e.g., \"567\" - \"123\" = \"444\")","failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should subtract with borrow (e.g., \"123\" - \"34\" = \"89\")","status":"skipped","title":"should subtract with borrow (e.g., \"123\" - \"34\" = \"89\")","failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should handle subtracting to zero (e.g., \"123\" - \"123\" = \"0\")","status":"skipped","title":"should handle subtracting to zero (e.g., \"123\" - \"123\" = \"0\")","failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should handle subtracting a larger number from a smaller one (e.g., \"100\" - \"200\" = \"-100\")","status":"skipped","title":"should handle subtracting a larger number from a smaller one (e.g., \"100\" - \"200\" = \"-100\")","failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) [_webgl_multiply_one_limb_by_bigint] should multiply limb 12 by BigInt \"3\" (Actual GPU)","status":"failed","title":"[_webgl_multiply_one_limb_by_bigint] should multiply limb 12 by BigInt \"3\" (Actual GPU)","duration":319.39999999990687,"failureMessages":["AssertionError: expected '[WebGL Test _webgl_multiply_one_limb_…' to contain '[WebGL MultLimb Debug] webGLResult.to…'\n    at http://localhost:63315/app/lib/bigint.webgl.test.js?import&browserv=1749963502423:194:22\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=ccbc1642:155:11\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=ccbc1642:752:26\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=ccbc1642:1894:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=ccbc1642:1860:10)\n    at runTest (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=ccbc1642:1571:12)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=ccbc1642:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=ccbc1642:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=ccbc1642:1726:8)"],"meta":{"failScreenshotPath":"/app/lib/__screenshots__/bigint.webgl.test.js/BigIntPrimitive-WebGL-Operations-multiply-----WebGL-Path--Simple-Cases----webgl-multiply-one-limb-by-bigint--should-multiply-limb-12-by-BigInt--3---Actual-GPU--1.png"}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) should multiply with one number being zero using WebGL (e.g., \"123\" * \"0\" = \"0\")","status":"skipped","title":"should multiply with one number being zero using WebGL (e.g., \"123\" * \"0\" = \"0\")","failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) should multiply two single-digit numbers using WebGL (e.g., \"7\" * \"8\" = \"56\")","status":"skipped","title":"should multiply two single-digit numbers using WebGL (e.g., \"7\" * \"8\" = \"56\")","failureMessages":[],"meta":{}}],"startTime":1749963502832,"endTime":1749963503151.4,"status":"failed","message":"","name":"/app/lib/bigint.webgl.test.js"}]}