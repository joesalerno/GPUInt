{"numTotalTestSuites":13,"numPassedTestSuites":10,"numFailedTestSuites":3,"numPendingTestSuites":0,"numTotalTests":29,"numPassedTests":26,"numFailedTests":3,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1749856794681,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() should throw Error for invalid sd","status":"passed","title":"should throw Error for invalid sd","duration":6.2000000001862645,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() should throw Error for invalid rm","status":"passed","title":"should throw Error for invalid rm","duration":1.2999999998137355,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() should handle zero input","status":"passed","title":"should handle zero input","duration":0.6000000005587935,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() should handle sd >= coefficient length correctly","status":"passed","title":"should handle sd >= coefficient length correctly","duration":0.6999999992549419,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()","Rounding Modes"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() Rounding Modes RM_DOWN (0)","status":"passed","title":"RM_DOWN (0)","duration":1,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()","Rounding Modes"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() Rounding Modes RM_HALF_UP (1)","status":"passed","title":"RM_HALF_UP (1)","duration":0.5,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()","Rounding Modes"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() Rounding Modes RM_HALF_EVEN (2)","status":"passed","title":"RM_HALF_EVEN (2)","duration":0.7999999998137355,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()","Rounding Modes"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() Rounding Modes RM_UP (3)","status":"passed","title":"RM_UP (3)","duration":0.20000000018626451,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","prec()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) prec() should return a new instance","status":"passed","title":"should return a new instance","duration":0.5,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","toPrecision()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) toPrecision() should return toString() if sd is undefined","status":"passed","title":"should return toString() if sd is undefined","duration":0.6000000005587935,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","toPrecision()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) toPrecision() should throw Error for invalid sd","status":"passed","title":"should throw Error for invalid sd","duration":1.2999999998137355,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","toPrecision()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) toPrecision() should handle zero cases correctly","status":"passed","title":"should handle zero cases correctly","duration":0.20000000018626451,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","Precision Methods (prec, toPrecision)","toPrecision()"],"fullName":"BigIntPrimitive Precision Methods (prec, toPrecision) toPrecision() should format to exponential string based on sd","status":"passed","title":"should format to exponential string based on sd","duration":1.099999999627471,"failureMessages":[],"meta":{}}],"startTime":1749856799845,"endTime":1749856799861.1,"status":"passed","message":"","name":"/app/lib/bigint.test.js"},{"assertionResults":[{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should add two small BigIntPrimitives using WebGL (e.g., \"123\" + \"456\" = \"579\")","status":"passed","title":"should add two small BigIntPrimitives using WebGL (e.g., \"123\" + \"456\" = \"579\")","duration":45,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should add two larger BigIntPrimitives requiring multiple limbs using WebGL (e.g., \"8000\" + \"7000\" = \"15000\")","status":"passed","title":"should add two larger BigIntPrimitives requiring multiple limbs using WebGL (e.g., \"8000\" + \"7000\" = \"15000\")","duration":24.799999999813735,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should handle adding zero to a number using WebGL","status":"passed","title":"should handle adding zero to a number using WebGL","duration":15.200000000186265,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should subtract two positive single-limb numbers, no borrow (e.g., \"567\" - \"123\" = \"444\")","status":"failed","title":"should subtract two positive single-limb numbers, no borrow (e.g., \"567\" - \"123\" = \"444\")","duration":479.90000000037253,"failureMessages":["AssertionError: expected '567' to be '444' // Object.is equality\n    at http://localhost:63315/app/lib/bigint.webgl.test.js?import&browserv=1749856799677:52:33\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:155:11\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:752:26\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1894:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1860:10)\n    at runTest (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1571:12)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)"],"meta":{"failScreenshotPath":"/app/lib/__screenshots__/bigint.webgl.test.js/BigIntPrimitive-WebGL-Operations-subtract-----WebGL-Path-should-subtract-two-positive-single-limb-numbers--no-borrow--e-g----567-----123-----444---1.png"}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should subtract with borrow (e.g., \"123\" - \"34\" = \"89\")","status":"failed","title":"should subtract with borrow (e.g., \"123\" - \"34\" = \"89\")","duration":188.90000000037253,"failureMessages":["AssertionError: expected '123' to be '89' // Object.is equality\n    at http://localhost:63315/app/lib/bigint.webgl.test.js?import&browserv=1749856799677:61:33\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:155:11\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:752:26\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1894:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1860:10)\n    at runTest (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1571:12)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)"],"meta":{"failScreenshotPath":"/app/lib/__screenshots__/bigint.webgl.test.js/BigIntPrimitive-WebGL-Operations-subtract-----WebGL-Path-should-subtract-with-borrow--e-g----123-----34-----89---1.png"}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should handle subtracting to zero (e.g., \"123\" - \"123\" = \"0\")","status":"passed","title":"should handle subtracting to zero (e.g., \"123\" - \"123\" = \"0\")","duration":16.5,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should handle subtracting a larger number from a smaller one (e.g., \"100\" - \"200\" = \"-100\")","status":"failed","title":"should handle subtracting a larger number from a smaller one (e.g., \"100\" - \"200\" = \"-100\")","duration":219.09999999962747,"failureMessages":["AssertionError: expected '-200' to be '-100' // Object.is equality\n    at http://localhost:63315/app/lib/bigint.webgl.test.js?import&browserv=1749856799677:79:33\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:155:11\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:752:26\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1894:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1860:10)\n    at runTest (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1571:12)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)"],"meta":{"failScreenshotPath":"/app/lib/__screenshots__/bigint.webgl.test.js/BigIntPrimitive-WebGL-Operations-subtract-----WebGL-Path-should-handle-subtracting-a-larger-number-from-a-smaller-one--e-g----100-----200------100---1.png"}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) should multiply two small BigIntPrimitives using WebGL (e.g., \"12\" * \"3\" = \"36\")","status":"passed","title":"should multiply two small BigIntPrimitives using WebGL (e.g., \"12\" * \"3\" = \"36\")","duration":49.5,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) should multiply with one number being zero using WebGL (e.g., \"123\" * \"0\" = \"0\")","status":"passed","title":"should multiply with one number being zero using WebGL (e.g., \"123\" * \"0\" = \"0\")","duration":0.5,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) should multiply two single-digit numbers using WebGL (e.g., \"7\" * \"8\" = \"56\")","status":"passed","title":"should multiply two single-digit numbers using WebGL (e.g., \"7\" * \"8\" = \"56\")","duration":19.200000000186265,"failureMessages":[],"meta":{}}],"startTime":1749856799837,"endTime":1749856800896.2,"status":"failed","message":"","name":"/app/lib/bigint.webgl.test.js"},{"assertionResults":[{"ancestorTitles":["App Component"],"fullName":"App Component renders initial UI elements correctly","status":"passed","title":"renders initial UI elements correctly","duration":71.80000000074506,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component performs simple addition (WebGL Path) and displays result","status":"passed","title":"performs simple addition (WebGL Path) and displays result","duration":190.59999999962747,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component performs simple multiplication (WebGL Path) and displays result","status":"passed","title":"performs simple multiplication (WebGL Path) and displays result","duration":154.90000000037253,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component performs simple subtraction (CPU Path) and displays result","status":"passed","title":"performs simple subtraction (CPU Path) and displays result","duration":184.8999999994412,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component handles error for invalid input","status":"passed","title":"handles error for invalid input","duration":81.5,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component handles division by zero error","status":"passed","title":"handles division by zero error","duration":146.90000000037253,"failureMessages":[],"meta":{}}],"startTime":1749856800363,"endTime":1749856801193.9,"status":"passed","message":"","name":"/app/src/App.test.jsx"}]}