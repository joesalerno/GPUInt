{"numTotalTestSuites":10,"numPassedTestSuites":7,"numFailedTestSuites":3,"numPendingTestSuites":0,"numTotalTests":29,"numPassedTests":26,"numFailedTests":3,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1749851550463,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock should return zero if limbValue is 0","status":"passed","title":"should return zero if limbValue is 0","duration":3.5,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock should return zero if otherNumber is zero","status":"passed","title":"should return zero if otherNumber is zero","duration":1.199999999254942,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock limbValue * single-limb otherNumber, no final carry","status":"passed","title":"limbValue * single-limb otherNumber, no final carry","duration":1.300000000745058,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock limbValue * single-limb otherNumber, with final carry","status":"passed","title":"limbValue * single-limb otherNumber, with final carry","duration":1.599999999627471,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock limbValue * multi-limb otherNumber, no JS propagated carry","status":"passed","title":"limbValue * multi-limb otherNumber, no JS propagated carry","duration":1.2000000001862645,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock limbValue * multi-limb otherNumber, with JS propagated carry","status":"passed","title":"limbValue * multi-limb otherNumber, with JS propagated carry","duration":3.3999999994412065,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock limbValue * otherNumber, where final propagatedCarry requires splitting","status":"passed","title":"limbValue * otherNumber, where final propagatedCarry requires splitting","duration":1,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock CPU: 5 * \"123\" = \"615\"","status":"passed","title":"CPU: 5 * \"123\" = \"615\"","duration":5.400000000372529,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock CPU: 9 * \"9\" = \"81\"","status":"passed","title":"CPU: 9 * \"9\" = \"81\"","duration":1.7999999998137355,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock CPU: 5 * \"1234\" = \"6170\"","status":"passed","title":"CPU: 5 * \"1234\" = \"6170\"","duration":2.400000000372529,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock CPU: 0 * \"12345\" = \"0\"","status":"passed","title":"CPU: 0 * \"12345\" = \"0\"","duration":1.2000000001862645,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock CPU: 7 * \"0\" = \"0\"","status":"passed","title":"CPU: 7 * \"0\" = \"0\"","duration":1.3999999994412065,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive","_multiply_limb_by_bigint() with WebGL mock"],"fullName":"BigIntPrimitive _multiply_limb_by_bigint() with WebGL mock CPU: 2 * \"500\" (exp 1) = \"1000\" (exp 1)","status":"passed","title":"CPU: 2 * \"500\" (exp 1) = \"1000\" (exp 1)","duration":1.099999999627471,"failureMessages":[],"meta":{}}],"startTime":1749851553421,"endTime":1749851553448.1,"status":"passed","message":"","name":"/app/lib/bigint.test.js"},{"assertionResults":[{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should add two small BigIntPrimitives using WebGL (e.g., \"123\" + \"456\" = \"579\")","status":"passed","title":"should add two small BigIntPrimitives using WebGL (e.g., \"123\" + \"456\" = \"579\")","duration":24.299999999813735,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should add two larger BigIntPrimitives requiring multiple limbs using WebGL (e.g., \"8000\" + \"7000\" = \"15000\")","status":"passed","title":"should add two larger BigIntPrimitives requiring multiple limbs using WebGL (e.g., \"8000\" + \"7000\" = \"15000\")","duration":25.40000000037253,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","add() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations add() - WebGL Path should handle adding zero to a number using WebGL","status":"passed","title":"should handle adding zero to a number using WebGL","duration":23.699999999254942,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should subtract two positive single-limb numbers, no borrow (e.g., \"567\" - \"123\" = \"444\")","status":"failed","title":"should subtract two positive single-limb numbers, no borrow (e.g., \"567\" - \"123\" = \"444\")","duration":275,"failureMessages":["AssertionError: expected '567' to be '444' // Object.is equality\n    at http://localhost:63315/app/lib/bigint.webgl.test.js?import&browserv=1749851553128:52:33\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:155:11\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:752:26\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1894:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1860:10)\n    at runTest (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1571:12)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)"],"meta":{"failScreenshotPath":"/app/lib/__screenshots__/bigint.webgl.test.js/BigIntPrimitive-WebGL-Operations-subtract-----WebGL-Path-should-subtract-two-positive-single-limb-numbers--no-borrow--e-g----567-----123-----444---1.png"}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should subtract with borrow (e.g., \"123\" - \"34\" = \"89\")","status":"failed","title":"should subtract with borrow (e.g., \"123\" - \"34\" = \"89\")","duration":128.5,"failureMessages":["AssertionError: expected '123' to be '89' // Object.is equality\n    at http://localhost:63315/app/lib/bigint.webgl.test.js?import&browserv=1749851553128:61:33\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:155:11\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:752:26\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1894:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1860:10)\n    at runTest (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1571:12)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)"],"meta":{"failScreenshotPath":"/app/lib/__screenshots__/bigint.webgl.test.js/BigIntPrimitive-WebGL-Operations-subtract-----WebGL-Path-should-subtract-with-borrow--e-g----123-----34-----89---1.png"}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should handle subtracting to zero (e.g., \"123\" - \"123\" = \"0\")","status":"passed","title":"should handle subtracting to zero (e.g., \"123\" - \"123\" = \"0\")","duration":10,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","subtract() - WebGL Path"],"fullName":"BigIntPrimitive WebGL Operations subtract() - WebGL Path should handle subtracting a larger number from a smaller one (e.g., \"100\" - \"200\" = \"-100\")","status":"failed","title":"should handle subtracting a larger number from a smaller one (e.g., \"100\" - \"200\" = \"-100\")","duration":118.40000000037253,"failureMessages":["AssertionError: expected '-200' to be '-100' // Object.is equality\n    at http://localhost:63315/app/lib/bigint.webgl.test.js?import&browserv=1749851553128:79:33\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:155:11\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:752:26\n    at http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1894:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1860:10)\n    at runTest (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1571:12)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)\n    at async runSuite (http://localhost:63315/node_modules/@vitest/runner/dist/chunk-hooks.js?v=3f97bddb:1726:8)"],"meta":{"failScreenshotPath":"/app/lib/__screenshots__/bigint.webgl.test.js/BigIntPrimitive-WebGL-Operations-subtract-----WebGL-Path-should-handle-subtracting-a-larger-number-from-a-smaller-one--e-g----100-----200------100---1.png"}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) should multiply two small BigIntPrimitives using WebGL (e.g., \"12\" * \"3\" = \"36\")","status":"passed","title":"should multiply two small BigIntPrimitives using WebGL (e.g., \"12\" * \"3\" = \"36\")","duration":32.10000000055879,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) should multiply with one number being zero using WebGL (e.g., \"123\" * \"0\" = \"0\")","status":"passed","title":"should multiply with one number being zero using WebGL (e.g., \"123\" * \"0\" = \"0\")","duration":0.7000000001862645,"failureMessages":[],"meta":{}},{"ancestorTitles":["BigIntPrimitive WebGL Operations","multiply() - WebGL Path (Simple Cases)"],"fullName":"BigIntPrimitive WebGL Operations multiply() - WebGL Path (Simple Cases) should multiply two single-digit numbers using WebGL (e.g., \"7\" * \"8\" = \"56\")","status":"passed","title":"should multiply two single-digit numbers using WebGL (e.g., \"7\" * \"8\" = \"56\")","duration":11.799999999813735,"failureMessages":[],"meta":{}}],"startTime":1749851553332,"endTime":1749851553982.8,"status":"failed","message":"","name":"/app/lib/bigint.webgl.test.js"},{"assertionResults":[{"ancestorTitles":["App Component"],"fullName":"App Component renders initial UI elements correctly","status":"passed","title":"renders initial UI elements correctly","duration":39.700000000186265,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component performs simple addition (WebGL Path) and displays result","status":"passed","title":"performs simple addition (WebGL Path) and displays result","duration":150.40000000037253,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component performs simple multiplication (WebGL Path) and displays result","status":"passed","title":"performs simple multiplication (WebGL Path) and displays result","duration":146.79999999981374,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component performs simple subtraction (CPU Path) and displays result","status":"passed","title":"performs simple subtraction (CPU Path) and displays result","duration":166.70000000018626,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component handles error for invalid input","status":"passed","title":"handles error for invalid input","duration":78.1000000005588,"failureMessages":[],"meta":{}},{"ancestorTitles":["App Component"],"fullName":"App Component handles division by zero error","status":"passed","title":"handles division by zero error","duration":137.90000000037253,"failureMessages":[],"meta":{}}],"startTime":1749851553595,"endTime":1749851554314.9,"status":"passed","message":"","name":"/app/src/App.test.jsx"}]}