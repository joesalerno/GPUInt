// lib/shaders/multiply_limb.frag
precision highp float;

uniform float u_limbVal;            // The single limb value from the first number
uniform sampler2D u_otherNumTexture; // Texture containing limbs of the second number
// Removed u_carryTexture
uniform float u_base; // Base for calculations, supplied by JS (NEW)

varying vec2 v_texCoord; // Texture coordinate, indicates which limb of u_otherNumTexture we're processing

void main() {
    float otherNumLimb = texture2D(u_otherNumTexture, v_texCoord).r;
    // carryIn is now handled by JS logic

    // Calculate product of the current otherNumLimb and u_limbVal
    // The JS side will incorporate any carry from the previous (less significant) limb's product
    float product = u_limbVal * otherNumLimb;

    float resultLimb = mod(product, u_base);
    float carryOut = floor(product / u_base); // This is the carry generated by THIS specific limb_product for JS to use

    gl_FragColor = vec4(resultLimb, carryOut, 0.0, 1.0); // Output: result limb and local carry out
}
